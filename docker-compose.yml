version: '3'

services:

  reverse-proxy:
    image: traefik:latest
    command: --api --docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik
    labels:
      - traefik.docker.network=traefik

  webapp:
    depends_on:
      - elasticsearch
    image: paperless-documents-search-webapp
    entrypoint: java -Dspring.profiles.active=prod -jar /webapp/paperless-documents-search-webapp.jar
    environment:
      - SPRING_APPLICATION_JSON={"spring.data.elasticsearch.cluster-nodes":"elasticsearch:9300"}
    ports:
      - 8053
    volumes:
      # path where are located my files, may be to adapt for you
      - /media/documents/Documents:/media/documents:ro
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8053/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - traefik.docker.network=traefik
      - traefik.frontend.rule=Host:localhost,webapp.paperless-documents-search.

  elasticsearch:
    image: paperless-documents-search-elasticsearch
    ports:
      - 9200
      - 9300
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - traefik.docker.network=traefik
      - traefik.frontend.auth.basic=test:$$apr1$$1gghuwT3$$pBw.iUnlFjooaBuh7KZR4/

  portainer:
    image: portainer/portainer:latest
    command: --no-auth
    ports:
      - 9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik
    labels:
      - traefik.docker.network=traefik

networks:
  traefik:
    driver: bridge
