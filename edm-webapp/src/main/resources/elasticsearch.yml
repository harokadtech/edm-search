# See <http://elasticsearch.org/guide/reference/setup/configuration.html>
# for information on supported formats and syntax for the configuration file.


################################### Cluster ###################################

# Cluster name identifies your cluster for auto-discovery. If you're running
# multiple clusters on the same network, make sure you're using unique names.
#
 cluster.name: simple_data_search


#################################### Node #####################################

# Node names are generated dynamically on startup, so you're relieved
# from configuring them manually. You can tie this node to a specific name:
#
# node.name: "Simple EDM"


#################################### Index ####################################

# These settings directly affect the performance of index and search operations
# in your cluster. Assuming you have enough machines to hold shards and
# replicas, the rule of thumb is:
#
# 1. Having more *shards* enhances the _indexing_ performance and allows to
#    _distribute_ a big index across machines.
# 2. Having more *replicas* enhances the _search_ performance and improves the
#    cluster _availability_.
#
# The "number_of_shards" is a one-time setting for an index.
#
# The "number_of_replicas" can be increased or decreased anytime,
# by using the Index Update Settings API.
#
# Note, that for development on a local machine, with small indices, it usually
# makes sense to "disable" the distributed features:

# Set the number of shards (splits) of an index (5 by default):
 index.number_of_shards: 1

# Set the number of replicas (additional copies) of an index (1 by default)
 index.number_of_replicas: 0


#################################### Paths ####################################

# Path to directory containing configuration (this file and logging.yml):
#
# path.conf: /path/to/conf

# Path to directory where to store index data allocated for this node.
#
 path.data: ./edm/es/data
#
# Can optionally include more than one location, causing data to be striped across
# the locations (Ã  la RAID 0) on a file level, favouring locations with most free
# space on creation. For example:
#
# path.data: /path/to/data1,/path/to/data2

# Path to temporary files:
#
 path.work: ./edm/es/work

# Path to log files:
#
 path.logs: ./edm/es/logs

# Path to where plugins are installed:
#
 path.plugins: ./edm/es/plugins


#################################### Plugin ###################################

# If a plugin listed here is not installed for current node, the node will not start.
#
 plugin.mandatory: mapper-attachments


############################## Network And HTTP ###############################

# Elasticsearch, by default, binds itself to the 0.0.0.0 address, and listens
# on port [9200-9300] for HTTP traffic and on port [9300-9400] for node-to-node
# communication. (the range means that if the port is busy, it will automatically
# try the next port).

# Set a custom port for the node to node communication (9300 by default):
#
 transport.tcp.port: 9353

# Set a custom port to listen for HTTP traffic (9200 by default):
#
 http.port: 9253


################################## Discovery ##################################

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster. It can be used when multicast is not present,
# or to restrict the cluster communication-wise.
#
# 1. Disable multicast discovery (enabled by default):
#
 discovery.zen.ping.multicast.enabled: true

#
# 2. Configure an initial list of master nodes in the cluster
#    to perform discovery when new nodes (master or data) are started:
#
# discovery.zen.ping.unicast.hosts: ["host1", "host2:port", "host3[portX-portY]"]
# discovery.zen.ping.unicast.hosts: ["localhost"]
